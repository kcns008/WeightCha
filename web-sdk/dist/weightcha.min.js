!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((n="undefined"!=typeof globalThis?globalThis:n||self).WeightCha={})}(this,function(n){"use strict";class WeightCha{constructor(n){if(this.initialized=!1,this.currentChallenge=null,this.config={baseUrl:"https://api.weightcha.com",theme:"auto",language:"en",debug:!1,...n},!this.config.apiKey)throw new Error("API key is required")}async init(){if(!this.initialized)try{await this.checkClientAvailability(),this.loadStyles(),this.initialized=!0,this.log("WeightCha SDK initialized successfully")}catch(n){throw new Error(`Failed to initialize WeightCha: ${n.message}`)}}async verify(n,t={}){this.initialized||await this.init();const e=document.getElementById(n);if(!e)throw new Error(`Container element with id '${n}' not found`);try{const n=await this.createChallenge(t);this.currentChallenge=n,this.renderUI(e,n,t);const i=await this.waitForVerification(n);return i.success&&t.onSuccess&&t.onSuccess(i.token),i}catch(n){return this.log("Verification error:",n),t.onError&&t.onError(n),{success:!1,error:n.message}}finally{this.currentChallenge=null}}async validateToken(n){try{const t=await this.apiCall("/verification/validate-token",{method:"POST",body:JSON.stringify({token:n})});return t.data.valid&&t.data.isHuman}catch(n){return this.log("Token validation error:",n),!1}}async checkClientAvailability(){if(!navigator.platform.includes("Mac"))throw new Error("WeightCha requires macOS with Force Touch trackpad");try{if(!(await fetch("http://localhost:8080/health",{method:"GET",headers:{"Content-Type":"application/json"}})).ok)throw new Error("WeightCha client not responding")}catch(n){throw new Error("WeightCha client not installed or not running. Please install the WeightCha macOS app.")}}async createChallenge(n){const e=await this.apiCall("/challenges",{method:"POST",body:JSON.stringify({type:n.type||"pressure_pattern",difficulty:n.difficulty||"medium",duration:n.duration||5})});return new t(e.data,this.config)}renderUI(n,t,e){n.innerHTML=`\n      <div class="weightcha-container" data-theme="${this.config.theme}">\n        <div class="weightcha-header">\n          <h3>Human Verification</h3>\n          <p>Please use your MacBook trackpad to verify you're human</p>\n        </div>\n        \n        <div class="weightcha-status">\n          <div class="weightcha-status-icon">\n            <svg class="weightcha-trackpad-icon" viewBox="0 0 100 100">\n              <rect x="10" y="20" width="80" height="60" rx="8" fill="currentColor" opacity="0.1"/>\n              <rect x="15" y="25" width="70" height="50" rx="4" fill="currentColor" opacity="0.2"/>\n            </svg>\n          </div>\n          <div class="weightcha-status-text">\n            <div class="weightcha-instructions">${t.instructions}</div>\n            <div class="weightcha-progress">\n              <div class="weightcha-progress-bar">\n                <div class="weightcha-progress-fill" style="width: 0%"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class="weightcha-actions">\n          <button class="weightcha-btn weightcha-btn-primary" id="weightcha-start">\n            Start Verification\n          </button>\n          <button class="weightcha-btn weightcha-btn-secondary" id="weightcha-cancel" style="display: none;">\n            Cancel\n          </button>\n        </div>\n        \n        <div class="weightcha-footer">\n          <a href="https://weightcha.com" target="_blank">Powered by WeightCha</a>\n        </div>\n      </div>\n    `,this.bindEvents(n,t,e)}bindEvents(n,t,e){const i=n.querySelector("#weightcha-start"),a=n.querySelector("#weightcha-cancel");i.addEventListener("click",async()=>{try{await t.start(),i.style.display="none",a.style.display="inline-block"}catch(n){this.log("Failed to start challenge:",n),e.onError&&e.onError(n)}}),a.addEventListener("click",()=>{t.cancel(),e.onCancel&&e.onCancel()})}async waitForVerification(n){return new Promise((t,e)=>{n.onComplete=n=>{t({success:!0,token:n.token,isHuman:n.isHuman,confidence:n.confidence})},n.onError=n=>{e(n)},n.onCancel=()=>{t({success:!1,error:"Verification cancelled by user"})}})}async apiCall(n,t={}){const e=`${this.config.baseUrl}/api/v1${n}`,i=await fetch(e,{...t,headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`,...t.headers}});if(!i.ok){const n=await i.json().catch(()=>({}));throw new Error(n.error||`HTTP ${i.status}: ${i.statusText}`)}return i.json()}loadStyles(){if(document.getElementById("weightcha-styles"))return;const n=document.createElement("style");n.id="weightcha-styles",n.textContent=this.getCSSStyles(),document.head.appendChild(n)}getCSSStyles(){return'\n      .weightcha-container {\n        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;\n        border: 1px solid #e0e0e0;\n        border-radius: 8px;\n        padding: 24px;\n        max-width: 400px;\n        margin: 0 auto;\n        background: #ffffff;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n      }\n\n      .weightcha-container[data-theme="dark"] {\n        background: #1a1a1a;\n        border-color: #333;\n        color: #ffffff;\n      }\n\n      .weightcha-header {\n        text-align: center;\n        margin-bottom: 20px;\n      }\n\n      .weightcha-header h3 {\n        margin: 0 0 8px 0;\n        font-size: 18px;\n        font-weight: 600;\n      }\n\n      .weightcha-header p {\n        margin: 0;\n        font-size: 14px;\n        color: #666;\n      }\n\n      .weightcha-container[data-theme="dark"] .weightcha-header p {\n        color: #999;\n      }\n\n      .weightcha-status {\n        display: flex;\n        align-items: center;\n        margin-bottom: 24px;\n        padding: 16px;\n        background: #f8f9fa;\n        border-radius: 6px;\n      }\n\n      .weightcha-container[data-theme="dark"] .weightcha-status {\n        background: #2a2a2a;\n      }\n\n      .weightcha-status-icon {\n        margin-right: 16px;\n      }\n\n      .weightcha-trackpad-icon {\n        width: 48px;\n        height: 48px;\n        color: #007AFF;\n      }\n\n      .weightcha-instructions {\n        font-size: 14px;\n        margin-bottom: 12px;\n        font-weight: 500;\n      }\n\n      .weightcha-progress {\n        width: 100%;\n      }\n\n      .weightcha-progress-bar {\n        width: 100%;\n        height: 4px;\n        background: #e0e0e0;\n        border-radius: 2px;\n        overflow: hidden;\n      }\n\n      .weightcha-progress-fill {\n        height: 100%;\n        background: linear-gradient(90deg, #007AFF, #00C7FF);\n        border-radius: 2px;\n        transition: width 0.3s ease;\n      }\n\n      .weightcha-actions {\n        display: flex;\n        gap: 12px;\n        justify-content: center;\n        margin-bottom: 16px;\n      }\n\n      .weightcha-btn {\n        padding: 10px 20px;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      }\n\n      .weightcha-btn-primary {\n        background: #007AFF;\n        color: white;\n      }\n\n      .weightcha-btn-primary:hover {\n        background: #0056CC;\n      }\n\n      .weightcha-btn-secondary {\n        background: #f0f0f0;\n        color: #333;\n      }\n\n      .weightcha-btn-secondary:hover {\n        background: #e0e0e0;\n      }\n\n      .weightcha-footer {\n        text-align: center;\n      }\n\n      .weightcha-footer a {\n        font-size: 12px;\n        color: #999;\n        text-decoration: none;\n      }\n\n      .weightcha-footer a:hover {\n        color: #007AFF;\n      }\n    '}log(...n){this.config.debug}}class t{constructor(n,t){this.data=n,this.config=t}get id(){return this.data.challengeId}get instructions(){return this.data.instructions}async start(){const n=new WebSocket(`ws://localhost:8080/challenge/${this.id}`);n.onopen=()=>{n.send(JSON.stringify({action:"start_challenge",challengeId:this.id,config:this.data}))},n.onmessage=n=>{const t=JSON.parse(n.data);switch(t.type){case"challenge_complete":this.onComplete&&this.onComplete(t.result);break;case"challenge_error":this.onError&&this.onError(new Error(t.error));break;case"progress_update":this.updateProgress(t.progress)}},n.onerror=()=>{this.onError&&this.onError(new Error("Failed to connect to WeightCha client"))}}cancel(){this.onCancel&&this.onCancel()}updateProgress(n){const t=document.querySelector(".weightcha-progress-fill");t&&(t.style.width=100*n+"%")}}"undefined"!=typeof module&&module.exports&&(module.exports={WeightCha:WeightCha}),"undefined"!=typeof window&&(window.WeightCha=WeightCha),n.WeightCha=WeightCha});
//# sourceMappingURL=weightcha.min.js.map
